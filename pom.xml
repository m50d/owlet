<?xml version='1.0' encoding='UTF-8'?>
<project
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns="http://maven.apache.org/POM/4.0.0">
	<modelVersion>4.0.0</modelVersion>
	<groupId>com.github.m50d</groupId>
	<artifactId>owlet</artifactId>
	<packaging>jar</packaging>
	<version>0.1-SNAPSHOT</version>
	<properties>
		<version.cats>1.0.1</version.cats>
		<version.scala.epoch>2.12</version.scala.epoch>
		<version.scala.plugin.macro>2.1.1</version.scala.plugin.macro>
		<version.scala.release>2.12.6</version.scala.release>
		<version.scala.zinc>1.1.7</version.scala.zinc>
		<version.scalajs.epoch>0.6</version.scalajs.epoch>
		<version.scalajs.release>0.6.24</version.scalajs.release>
		<version.scalajs.library>sjs${version.scalajs.epoch}_${version.scala.epoch}</version.scalajs.library>
	</properties>
	<organization>
		<name>us.oyanglul</name>
	</organization>
	<scm>
		<url>https://github.com/m50d/owlet</url>
		<connection>scm:git:https://github.com/m50d/owlet.git</connection>
		<developerConnection>scm:git:git@github.com:m50d/owlet.git</developerConnection>
	</scm>
	<build>
		<plugins>
			<plugin>
				<groupId>com.carrotgarden.maven</groupId>
				<artifactId>scalor-maven-plugin_${version.scala.epoch}</artifactId>
				<configuration>
					<!-- Compiler bridge. -->
					<defineBridge>
						<dependency>
							<groupId>org.scala-sbt</groupId>
							<artifactId>compiler-bridge_${version.scala.epoch}</artifactId>
							<version>${version.scala.zinc}</version>
						</dependency>
					</defineBridge>
					<!-- Scala compiler. -->
					<defineCompiler>
						<dependency>
							<groupId>org.scala-lang</groupId>
							<artifactId>scala-compiler</artifactId>
							<version>${version.scala.release}</version>
						</dependency>
					</defineCompiler>
					<!-- Compiler plugins. -->
					<definePluginList>
						<dependency>
							<groupId>org.scalamacros</groupId>
							<artifactId>paradise_${version.scala.release}</artifactId>
							<version>${version.scala.plugin.macro}</version>
						</dependency>
						<dependency>
							<groupId>org.scala-js</groupId>
							<artifactId>scalajs-compiler_${version.scala.release}</artifactId>
							<version>${version.scalajs.release}</version>
						</dependency>
					</definePluginList>
					<zincVerifyVersion>false</zincVerifyVersion>
					<eclipseRestartEnable>false</eclipseRestartEnable>
				</configuration>
				<executions>
					<execution>
						<!-- Subset of available. -->
						<goals>
							<!-- Setup Eclipse plugin. -->
							<goal>eclipse-config</goal>
							<!-- Transfer format settings. -->
							<goal>eclipse-format</goal>
							<!-- Manage test application. -->
							<!-- <goal>eclipse-restart</goal> -->
							<!-- Manage presentation compiler. -->
							<goal>eclipse-prescomp</goal>
							<!-- Add compilation sources. -->
							<goal>register-main</goal>
							<goal>register-test</goal>

							<!-- Compile sources. -->
							<goal>compile-main</goal>
							<goal>compile-test</goal>

							<!-- Link runtime JS script. -->
							<goal>scala-js-link-main</goal>
							<goal>scala-js-link-test</goal>

							<!-- Provide JS-VM environment for testing. -->
							<goal>scala-js-env-prov-webjars</goal>
							<goal>scala-js-env-prov-nodejs</goal>
							<goal>scala-js-env-conf-nodejs</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
		</plugins>
	</build>
	<dependencies>
		<dependency>
			<groupId>org.scala-lang</groupId>
			<artifactId>scala-library</artifactId>
			<version>${version.scala.release}</version>
		</dependency>
		<dependency>
			<groupId>org.scala-js</groupId>
			<artifactId>scalajs-library_${version.scala.epoch}</artifactId>
			<version>${version.scalajs.release}</version>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>org.scala-js</groupId>
			<artifactId>scalajs-test-interface_${version.scala.epoch}</artifactId>
			<version>${version.scalajs.release}</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.typelevel</groupId>
			<artifactId>cats-core_${version.scala.epoch}</artifactId>
			<version>${version.cats}</version>
		</dependency>
		<dependency>
			<groupId>org.typelevel</groupId>
			<artifactId>cats-free_${version.scala.epoch}</artifactId>
			<version>${version.cats}</version>
		</dependency>
		<dependency>
			<groupId>org.scala-js</groupId>
			<artifactId>scalajs-dom_${version.scalajs.library}</artifactId>
			<version>0.9.6</version>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>io.monix</groupId>
			<artifactId>monix_${version.scala.epoch}</artifactId>
			<version>3.0.0-RC1</version>
		</dependency>
		<dependency>
			<groupId>org.scalatest</groupId>
			<artifactId>scalatest_${version.scala.epoch}</artifactId>
			<version>3.0.3</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.typelevel</groupId>
			<artifactId>cats-laws_${version.scala.epoch}</artifactId>
			<version>1.0.1</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.typelevel</groupId>
			<artifactId>cats-testkit_${version.scala.epoch}</artifactId>
			<version>1.0.1</version>
			<scope>test</scope>
		</dependency>
	</dependencies>
</project>